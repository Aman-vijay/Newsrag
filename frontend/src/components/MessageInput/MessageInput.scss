// src/components/MessageInput/MessageInput.scss
@use '@/styles/index' as *;

.message-input-container {
  position: sticky;
  bottom: 0;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-top: 1px solid var(--border-color);
  padding: 1.5rem;
  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.08);

  @include respond-to(lg) {
    padding: 2rem 3rem;
  }

  .suggestions {
    margin-bottom: 1rem;
    
    .suggestions-title {
      font-size: 0.875rem;
      color: var(--text-secondary);
      margin: 0 0 0.75rem 0;
      font-weight: 600;
    }

    .suggestion-pills {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;

      .suggestion-pill {
        @include button-base;
        font-size: 0.875rem;
        padding: 0.5rem 1rem;
        border-radius: 1.5rem;
        background: rgba(37, 99, 235, 0.1);
        border: 1px solid rgba(37, 99, 235, 0.2);
        color: var(--primary-color);
        white-space: nowrap;
        transition: all var(--transition-normal);
        font-weight: 500;

        &:hover:not(:disabled) {
          background: var(--primary-color);
          color: white;
          border-color: var(--primary-color);
          transform: translateY(-2px);
          box-shadow: var(--shadow-md);
        }

        &:disabled {
          opacity: 0.5;
          cursor: not-allowed;
          transform: none;
        }
      }
    }
  }

  .input-controls {
    margin-bottom: var(--spacing-md);
    @include flex-end;

    .streaming-toggle {
      @include flex-start;
      gap: var(--spacing-sm);
      cursor: pointer;
      font-size: var(--font-size-sm);
      color: var(--text-secondary);
      user-select: none;

      input[type="checkbox"] {
        display: none;
      }

      .toggle-slider {
        position: relative;
        width: 44px;
        height: 24px;
        background: var(--border-color);
        border-radius: var(--radius-full);
        transition: var(--transition-normal);

        &::after {
          content: '';
          position: absolute;
          top: 2px;
          left: 2px;
          width: 20px;
          height: 20px;
          background: white;
          border-radius: 50%;
          transition: var(--transition-normal);
          box-shadow: var(--shadow-sm);
        }
      }

      input:checked + .toggle-slider {
        background: var(--primary-color);

        &::after {
          transform: translateX(20px);
        }
      }

      input:disabled + .toggle-slider {
        opacity: 0.5;
        cursor: not-allowed;
      }

      .toggle-label {
        font-weight: 500;
        transition: var(--transition-fast);

        &:hover {
          color: var(--text-primary);
        }
      }
    }
  }

  .message-form {
    .input-wrapper {
      position: relative;
      display: flex;
      align-items: flex-end;
      background: white;
      border: 2px solid var(--border-color);
      border-radius: 1.5rem;
      padding: 1rem 1.25rem;
      gap: 0.75rem;
      transition: all var(--transition-normal);
      box-shadow: var(--shadow-sm);

      &:hover {
        border-color: var(--border-hover);
        box-shadow: var(--shadow-md);
      }

      &:focus-within {
        border-color: var(--primary-color);
        box-shadow: var(--shadow-glow);
        transform: translateY(-1px);
      }

      .message-textarea {
        flex: 1;
        border: none;
        outline: none;
        background: transparent;
        font-family: inherit;
        font-size: 1rem;
        color: var(--text-primary);
        line-height: 1.5;
        resize: none;
        min-height: 24px;
        max-height: 120px;
        overflow-y: auto;
        @include custom-scrollbar();

        &::placeholder {
          color: var(--text-muted);
        }

        &:disabled {
          cursor: not-allowed;
          opacity: 0.7;
        }
      }

      .input-actions {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: var(--spacing-xs);

        .character-count {
          font-size: var(--font-size-xs);
          color: var(--text-muted);
          
          .warning {
            color: var(--warning-color);
          }
        }

        .send-button {
          @include button-base;
          width: 44px;
          height: 44px;
          border-radius: 50%;
          background: var(--primary-gradient);
          color: white;
          font-size: 1.25rem;
          flex-shrink: 0;
          transition: all var(--transition-normal);
          box-shadow: var(--shadow-md);
          border: 2px solid rgba(255, 255, 255, 0.2);

          &:hover:not(:disabled) {
            background: linear-gradient(135deg, var(--primary-hover), var(--accent-hover));
            transform: scale(1.05) translateY(-1px);
            box-shadow: var(--shadow-lg);
            box-shadow: var(--shadow-md);
          }

          &:active:not(:disabled) {
            transform: scale(0.95);
          }

          &:disabled {
            background: var(--border-color);
            color: var(--text-muted);
            cursor: not-allowed;
            transform: none;

            .loading-spinner {
              animation: spin 1s linear infinite;
            }
          }

          .send-icon {
            display: block;
          }
        }
      }
    }
  }

  .status-message {
    margin-top: var(--spacing-md);
    @include flex-center;

    .status-indicator {
      @include flex-start;
      gap: var(--spacing-sm);
      padding: var(--spacing-sm) var(--spacing-md);
      background: var(--bg-tertiary);
      border-radius: var(--radius-full);
      font-size: var(--font-size-sm);
      color: var(--text-secondary);

      .status-dot {
        width: 6px;
        height: 6px;
        background: var(--primary-color);
        border-radius: 50%;
        @include pulse-animation();
      }

      .status-text {
        font-weight: 500;
      }
    }
  }

  // Animations
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  // Mobile responsiveness
  @include respond-below(md) {
    padding: var(--spacing-md);

    .suggestions {
      .suggestion-pills {
        .suggestion-pill {
          font-size: var(--font-size-xs);
          padding: var(--spacing-xs) var(--spacing-sm);
        }
      }
    }

    .message-form .input-wrapper {
      padding: var(--spacing-sm);
      gap: var(--spacing-sm);

      .input-actions .send-button {
        width: 36px;
        height: 36px;
        font-size: 1.125rem;
      }
    }
  }

  @include respond-below(sm) {
    .input-controls {
      .streaming-toggle {
        font-size: var(--font-size-xs);
        
        .toggle-slider {
          width: 36px;
          height: 20px;

          &::after {
            width: 16px;
            height: 16px;
          }
        }

        input:checked + .toggle-slider::after {
          transform: translateX(16px);
        }
      }
    }

    .suggestions {
      .suggestion-pills {
        .suggestion-pill {
          @include text-truncate;
          max-width: 200px;
        }
      }
    }
  }

  // Dark theme adjustments
  [data-theme="dark"] & {
    .message-form .input-wrapper {
      background: var(--bg-secondary);

      .message-textarea {
        color: var(--text-primary);

        &::placeholder {
          color: var(--text-muted);
        }
      }
    }

    .streaming-toggle .toggle-slider::after {
      background: var(--bg-primary);
    }

    .status-message .status-indicator {
      background: var(--bg-secondary);
    }
  }
}